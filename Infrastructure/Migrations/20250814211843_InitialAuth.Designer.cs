// <auto-generated />
using System;
using Infrastructure.Persistencia.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(CitasDbContext))]
    [Migration("20250814211843_InitialAuth")]
    partial class InitialAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entidades.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EstacionNumero")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer")
                        .HasComment("1=Confirmada, 2=Cancelada, 3=Pendiente");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp");

                    b.Property<int>("TipoTramite")
                        .HasMaxLength(50)
                        .HasColumnType("integer")
                        .HasComment("Renovacion, PrimeraVez, Duplicado, CambioCategoria");

                    b.Property<int>("TurnoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_Cita_Estado");

                    b.HasIndex("TurnoId");

                    b.HasIndex("FechaHora", "EstacionNumero")
                        .IsUnique()
                        .HasDatabaseName("IX_Cita_FechaHora_Estacion");

                    b.HasIndex("UsuarioId", "FechaHora")
                        .HasDatabaseName("IX_Cita_Usuario_Fecha");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Domain.Entidades.Configuracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadEstaciones")
                        .HasColumnType("integer");

                    b.Property<int>("DuracionCitaMinutos")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("TurnoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TurnoId");

                    b.HasIndex("Fecha", "TurnoId")
                        .IsUnique()
                        .HasDatabaseName("IX_Configuracion_Fecha_Turno");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Domain.Entidades.Estacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasDatabaseName("IX_Estacion_Numero");

                    b.ToTable("Estaciones");
                });

            modelBuilder.Entity("Domain.Entidades.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("interval");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entidades.Cita", b =>
                {
                    b.HasOne("Domain.Entidades.Turno", "Turno")
                        .WithMany("Citas")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turno");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entidades.Configuracion", b =>
                {
                    b.HasOne("Domain.Entidades.Turno", "Turno")
                        .WithMany("Configuraciones")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Domain.Entidades.Turno", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Configuraciones");
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
